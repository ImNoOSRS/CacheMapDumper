package osrs.dev.dumper;

/**
 * An enumeration of object IDs that should be excluded from the collision map.
 */
public enum Exclusion
{
    AMETHYST_CRYSTALS_EMPTY_WALL_11393(11393),

    APE_ATOLL_JAIL_DOOR_4800(4800),
    APE_ATOLL_JAIL_DOOR_4801(4801),

    AL_KHARID_GATE_44599(44599),
    AL_KHARID_GATE_44598(44598),

    ARDOUGNE_BASEMENT_CELL_DOOR_35795(35795),

    BRIMHAVEN_DUNGEON_EXIT_20878(20878),
    BRIMHAVEN_GATE_1728(1728, CollisionFlags.TILE_DEFAULT),
    BRIMHAVEN_GATE_1727(1727, CollisionFlags.TILE_DEFAULT),
    BRIMHAVEN_DOOR_2628(2628),
    BRIMHAVEN_DOOR_1722(1722),

    BLACK_KNIGHTS_FORTRESS_DOOR_73(73),
    BLACK_KNIGHTS_FORTRESS_DOOR_74(74),
    BLACK_KNIGHTS_FORTRESS_DOOR_2337(2337),
    BLACK_KNIGHTS_FORTRESS_DOOR_2338(2338),
    BLACK_KNIGHTS_FORTRESS_WALL_2341(2341),


    CELL_DOOR_9562(9562),

    COOKING_GUILD_DOOR_10045(10045),
    COOKING_GUILD_DOOR_24958(24958),

    CRAFTING_GUILD_DOOR_14910(14910),

    DARKMEYER_CELL_DOOR_38014(38014),

    DESERT_MINING_CAMP_PRISON_DOOR_2689(2689),

    DRAYNOR_MANOR_BASEMENT_DOOR_44603(44603, CollisionFlags.TILE_DEFAULT),
    DRAYNOR_MANOR_LARGE_DOOR_134(134),
    DRAYNOR_MANOR_LARGE_DOOR_135(135),

    DRUIDS_ROBES_4035(4035),
    DRUIDS_ROBES_4036(4036),

    DWARF_CANNON_RAILING_15601(15601), // type = 9 is full blocked diagonal, type = 0 is wall, type = 1 is corner
    DWARF_CANNON_RAILING_15602(15602),
    DWARF_CANNON_RAILING_15603(15603),
    DWARF_CANNON_GATE_15604(15604),
    DWARF_CANNON_GATE_15605(15605),
    DWARF_CANNON_RAILING_15590(15590),
    DWARF_CANNON_RAILING_15591(15591),
    DWARF_CANNON_RAILING_15592(15592),
    DWARF_CANNON_RAILING_15593(15593),
    DWARF_CANNON_RAILING_15594(15594),
    DWARF_CANNON_RAILING_15595(15595),

    EDGEVILLE_DUNGEON_DOOR_1804(1804),

    FALADOR_GRAPPLE_WALL_17049(17049),
    FALADOR_GRAPPLE_WALL_17050(17050),
    FALADOR_GRAPPLE_WALL_17051(17051),
    FALADOR_GRAPPLE_WALL_17052(17052),

    FEROX_ENCLAVE_BARRIER_39652(39652),
    FEROX_ENCLAVE_BARRIER_39653(39653),

    FIGHT_ARENA_PRISON_DOOR_79(79),
    FIGHT_ARENA_PRISON_DOOR_80(80),

    FISHING_TRAWLER_RAIL_41400(41400),

    FORTHOS_DUNGEON_WALL_34854(34854),

    GOBLIN_TEMPLE_PRISON_DOOR_43457(43457),

    GNOME_BATTLEFIELD_CRUMBLED_WALL(2185),

    GRAND_EXCHANGE_BOOTH_10060(10060),
    GRAND_EXCHANGE_BOOTH_10061(10061),
    GRAND_EXCHANGE_BOOTH_30390(30390),

    GREAT_KOUREND_CELL_DOOR_41801(41801),

    GRIM_TALES_DOOR_24759(24759),

    HARDWOOD_GROVE_DOORS_9038(9038),
    HARDWOOD_GROVE_DOORS_9039(9039),

    HAUNTED_MINE_DOOR_4963(4963),
    HAUNTED_MINE_DOOR_4964(4964),

    HOSIDIUS_VINES_41814(41814),
    HOSIDIUS_VINES_41815(41815),
    HOSIDIUS_VINES_41816(41816),
    HOSIDIUS_VINES_46380(46380),
    HOSIDIUS_VINES_46381(46381),
    HOSIDIUS_VINES_46382(46382),

    KENDAL_STANDING_SPEARS_5860(5860),

    KRUKS_DUNGEON_WALL_28681(28681),
    KRUKS_DUNGEON_WALL_28798(28798),

    LUMBRIDGE_RECIPE_FOR_DISASTER_DOOR_12348(12348),
    LUMBRIDGE_RECIPE_FOR_DISASTER_DOOR_12349(12349),
    LUMBRIDGE_RECIPE_FOR_DISASTER_DOOR_12350(12350),

    MAGIC_AXE_HUT_DOOR_11726(11726),

    MCGRUBORS_WOOD_GATE_52(52),
    MCGRUBORS_WOOD_GATE_53(53),

    MELZARS_MAZE_BLUE_DOOR_2599(2599),
    MELZARS_MAZE_DOOR_2595(2595),
    MELZARS_MAZE_EXIT_DOOR_2602(2602),
    MELZARS_MAZE_GREEN_DOOR_2601(2601),
    MELZARS_MAZE_MAGENTA_DOOR_2600(2600),
    MELZARS_MAZE_ORANGE_DOOR_2597(2597),
    MELZARS_MAZE_RED_DOOR_2596(2596),
    MELZARS_MAZE_YELLOW_DOOR_2598(2598),

    MISTHALIN_MANOR_DOOR_30114(30114),
    MISTHALIN_MANOR_DOOR_30113(30113),
    MISTHALIN_MANOR_DAMAGED_WALL_29657(29657),
    MISTHALIN_MANOR_DAMAGED_WALL_29656(29656),

    // MEMBERS_GATE_1727(1727), // Taverley, Falador, Brimhaven, Wilderness, Edgeville Dungeon
    // MEMBERS_GATE_1728(1728), // Taverley, Falador, Brimhaven, Wilderness, Edgeville Dungeon

    OLD_SCHOOL_MUSEUM_CURTAIN_31885(31885), // type = 9 is full blocked diagonal, type = 0 is wall

    PATERDOMUS_TEMPLE_CELL_DOOR_3463(3463),

    PEST_CONTROL_WALL_14216(14216),
    PEST_CONTROL_WALL_14217(14217),
    PEST_CONTROL_WALL_14218(14218),
    PEST_CONTROL_WALL_14219(14219),
    PEST_CONTROL_WALL_14225(14225),
    PEST_CONTROL_WALL_14226(14226),
    PEST_CONTROL_WALL_14228(14228),
    PEST_CONTROL_WALL_14229(14229),
    PEST_CONTROL_WALL_25636(25636), // type = 9 is full blocked diagonal, type = 0 is wall

    PORT_SARIM_PRISON_DOOR_9563(9563),
    PORT_SARIM_PRISON_DOOR_9565(9565),

    PRINCE_ALI_RESCUE_PRISON_GATE_2881(2881),

    RANGING_GUILD_DOOR_11665(11665),

    RAT_PITS_RAT_WALL_10335(10335), // type = 9 is full blocked diagonal, type = 2 is wall
    RAT_PITS_RAT_WALL_10337(10337), // type = 9 is full blocked diagonal, type = 2 is wall
    RAT_PITS_RAT_WALL_10342(10342), // type = 9 is full blocked diagonal, type = 2 is wall
    RAT_PITS_RAT_WALL_10344(10344), // type = 9 is full blocked diagonal, type = 2 is wall

    SINCLAIR_MANOR_WINDOW_26123(26123),

    SCRUBFOOTS_CAVE_CREVICE_40889(40889),

    SHANTAY_PASS_PRISON_DOOR_2692(2692),

    TAI_BWO_WANNAI_ROTTEN_VILLAGE_FENCE_9025(9025),
    TAI_BWO_WANNAI_PARTIAL_FENCE_9026(9026),
    TAI_BWO_WANNAI_SHORT_FENCE_9027(9027),
    TAI_BWO_WANNAI_MEDIUM_FENCE_9028(9028),
    TAI_BWO_WANNAI_VILLAGE_FENCE_9029(9029),

    TAVERLEY_DUNGEON_PRISON_DOOR_2143(2143),
    TAVERLEY_DUNGEON_PRISON_DOOR_2144(2144),
    TAVERLEY_DUNGEON_DUSTY_KEY_DOOR_2623(2623),
    TAVERLY_MEMBERS_GATE_1727(1727),
    TAVERLY_MEMBERS_GATE_1728(1728),

    TEMPLE_OF_IKOV_DOOR_102(102),

    TEMPLE_OF_MARIMBO_DUNGEON_EXIT_16061(16061),
    TEMPLE_OF_MARIMBO_DUNGEON_EXIT_16100(16100),

    TREE_GNOME_STRONGHOLD_PRISON_DOOR_3367(3367),

    TROLL_STRONGHOLD_CELL_DOOR_3763(3763),
    TROLL_STRONGHOLD_CELL_DOOR_3765(3765),
    TROLL_STRONGHOLD_CELL_DOOR_3767(3767),
    TROLL_STRONGHOLD_EXIT_3772(3772),
    TROLL_STRONGHOLD_EXIT_3773(3773),
    TROLL_STRONGHOLD_EXIT_3774(3774),
    TROLL_STRONGHOLD_PRISON_DOOR_3780(3780),

    VARROCK_MUSEUM_GATE_24536(24536),

    VIYELDI_CAVES_CREVICE_2918(2918),

    WATERFALL_DUNGEON_DOOR_2002(2002),

    WEST_ARDOUGNE_MOURNER_HOUSE_DOOR_37321(37321),

    WILDERNESS_RESOURCE_AREA_GATE_26760(26760),

    WIZARDS_GUILD_DOOR_1732(1732),
    WIZARDS_GUILD_DOOR_1733(1733),

    YANILLE_GRAPPLE_WALL_17047(17047),
    YANILLE_GRAPPLE_WALL_17048(17058),

    ZANARIS_SHED_DOOR_2406(2406),
    VARROCK_ARIS_DOOR_2463(2463, CollisionFlags.TILE_DEFAULT),
    TREE_GNOME_STRONGHOLD_190(190),
    AL_KARID_GATE_44050(44050),
    AL_KARID_GATE_44051(44051),
    WOODCUTTING_GUILD_DOOR_28851(28851),
    WOODCUTTING_GUILD_DOOR_28852(28852),
    ARCH_WAY_1593(1593, CollisionFlags.TILE_DEFAULT),
    CITY_GATE_23983(23983),
    CITY_GATE_23984(23984),
    CITY_GATE_23990(23990),
    CITY_GATE_23989(23989),

    TREE_DOOR_1967(1967),
    TREE_DOOR_1968(1968),

    WOODEN_ARCH_4808(4808, CollisionFlags.TILE_DEFAULT),
    CLOTH_ARCH_15034(15034, CollisionFlags.TILE_DEFAULT),
    CLOTH_ARCH_3673(3673, CollisionFlags.TILE_DEFAULT),
    TRAP_DOOR_7257(7257),
    ARCH_1593(1593, CollisionFlags.TILE_DEFAULT),
    ARCH_23752(23752, CollisionFlags.TILE_DEFAULT),
    ARCH_1534(1534, CollisionFlags.TILE_DEFAULT),
    ARCH_1678(1678, CollisionFlags.TILE_DEFAULT),
    DOOR_11765(11765),

    ;

    /**
     * The object ID to be excluded
     */
    private final int id;

    /**
     * Whether the exclusion tile should be blocked or empty
     */
    private final boolean tile;

    Exclusion(int id)
    {
        this(id, CollisionFlags.TILE_BLOCKED);
    }

    Exclusion(int id, boolean tile)
    {
        this.id = id;
        this.tile = tile;
    }

    public static Boolean matches(int id)
    {
        for (Exclusion exclusion : values())
        {
            if (exclusion.id == id)
            {
                return exclusion.tile;
            }
        }
        return null;
    }
}